[project]
name = "fastapi-pagination"
version = "0.13.0"
description = "FastAPI pagination"
authors = [
    { name = "Yurii Karabas", email = "1998uriyyo@gmail.com" },
]
requires-python = ">=3.9,<4.0"
readme = "README.md"
license = "MIT"
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
]
dependencies = [
    "fastapi>=0.93.0",
    "pydantic>=1.9.1",
    "typing-extensions>=4.8.0,<5",
]

[project.optional-dependencies]
sqlmodel = [
    "sqlmodel>=0.0.22",
    "sqlakeyset>=2.0.1680321678,<3",
]
sqlalchemy = [
    "SQLAlchemy>=1.3.20",
    "sqlakeyset>=2.0.1680321678,<3",
]
databases = ["databases>=0.6.0"]
orm = [
    "orm>=0.3.1",
    "databases>=0.6.0",
]
ormar = []
tortoise = ["tortoise-orm>=0.22.0"]
asyncpg = [
    "SQLAlchemy>=1.3.20",
    "asyncpg>=0.24.0",
]
django = [
    "django<6.0.0",
    "databases>=0.6.0",
]
piccolo = ["piccolo>=0.89,<1.25"]
motor = ["motor>=3.6.0,<4.0.0"]
bunnet = ["bunnet>=1.1.0,<2"]
mongoengine = ["mongoengine>=0.23.1,<0.30.0"]
beanie = ["beanie>=1.25.0"]
scylla-driver = ["scylla-driver>=3.25.6,<4"]
odmantic = ["odmantic>=1.0.2,<2"]
elasticsearch = ["elasticsearch-dsl>=8.13.0,<9"]
firestore = ["google-cloud-firestore>=2.19.0,<3"]
all = [
    "sqlmodel>=0.0.22",
    "SQLAlchemy>=1.3.20",
    "databases>=0.6.0",
    "orm>=0.3.1",
    "odmantic>=1.0.2,<2",
    "tortoise-orm>=0.22.0",
    "asyncpg>=0.24.0",
    "django<6.0.0",
    "piccolo>=0.89,<1.25",
    "motor>=3.6.0,<4.0.0",
    "mongoengine>=0.23.1,<0.30.0",
    "pony>=0.7.16,<0.8",
    "beanie>=1.25.0",
    "sqlakeyset>=2.0.1680321678,<3",
    "scylla-driver>=3.25.6,<4",
    "bunnet>=1.1.0,<2",
    "elasticsearch-dsl>=8.13.0,<9",
    "google-cloud-firestore>=2.19.0,<3",
]

[project.urls]
Repository = "https://github.com/uriyyo/fastapi-pagination"

[dependency-groups]
dev = [
    "pytest>=8.3.4,<9",
    "pytest-cov>=6.0.0,<7",
    "pytest-asyncio>=0.25.3,<0.26",
    "flaky>=3.8.1,<4",
    "pre-commit>=4.1.0,<5",
    "Faker>=35.2,<38.0",
    "psycopg2-binary>=2.9.10,<3",
    "mkdocs>=1.6.1,<2",
    "mkdocs-material>=9.5.50,<10",
    "pymdown-extensions~=10.14",
    "fontawesome-markdown>=0.2.6,<0.3",
    "httpx>=0.28.1,<0.29",
    "asgi-lifespan>=2.1.0,<3",
    "requests>=2.32.2,<3",
    "uvicorn>=0.34.0,<0.35",
    "Jinja2>=3.1.5,<4",
    "mypy>=1.14.1,<2",
    "ruff>=0.9.4,<0.12.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
select = [
    "ALL",  # select all checks by default
]
ignore = [
    # single rule exclude
    "B008",    # do not perform function calls in argument defaults
    "S101",    # use of assert detected
    "SIM114",  # allow have multiple ifs with same body
    "TRY003",  # allow long exc message
    "RUF100",  # allow unused noqa
    "RUF012",  # allow mutable class var
    "COM812",  # will be handled by ruff format
    "ISC001",  # will be handled by ruff format
    "SLF001",  # allow access to private member
    "N806",    # allow variable name to start from uppercase letter
    "N805",    # ignore first argument name check
    "N818",    # ignore exception name should ends with Error suffix
    "FAST002", # allow to use non-annotated dependencies
    "PLR0913",  # allow more than 5 arguments
    "PLR2004", # allow to compare with "magic numbers"
    "UP007",   # ignore X | Y annotation suggestion
    "TC001",   # ignore moving things to if TYPE_CHECKING block
    "TC002",   # ignore moving things to if TYPE_CHECKING block
    "TC003",   # ignore moving things to if TYPE_CHECKING block
    "A005",    # allow module name to shadow a Python standard-library module
    "TC006",   # ignore quotes in typing.cast calls

    # full rule exclude
    "D",    # ignore docstrings
    "FA",  # ignore future annotations
    "ANN", # ignore annotations
    "FIX", # ignore FIXMEs
    "TD",  # ignore all TODOs
    "ARG", # ignore unused arguments
    "FBT", # ignore flake8-boolean-trap
    "EM",  # ignore error message formatting
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
]
per-file-ignores = { }
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.9"
strict = true
follow_imports = "normal"
ignore_missing_imports = true
no_implicit_reexport = false
show_column_numbers = true
show_error_codes = true

[tool.coverage.paths]
source = ["fastapi_pagination"]

[tool.coverage.run]
source = ["fastapi_pagination"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstractmethod",
    "@overload",
    "if TYPE_CHECKING:",
]
