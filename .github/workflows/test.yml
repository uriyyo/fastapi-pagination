name: Test

on:
  pull_request:
    types:
      - "opened"
      - "synchronize"
  push:
    branches:
      - "main"

jobs:
  test:
    runs-on: ubuntu-latest
    name: "py${{ matrix.python-version }}; pydantic-${{ matrix.pydantic_v2 == 'true' && 'v2' || 'v1' }}; fastapi${{ matrix.fastapi_pre_0_112_4 == 'true' && '<0.12.4' || '>=0.12.4' }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
        pydantic_v2: [ "true", "false" ]
        fastapi_pre_0_112_4: [ "true", "false" ]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Cache Docker images
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ runner.os }}-ci

      - name: Prepare DBs
        shell: bash
        run: |
          bash scripts/ci-prepare.sh

      - name: Run tests
        shell: bash
        env:
          PY_VERSION: ${{ matrix.python-version }}
          PYDANTIC_V2: ${{ matrix.pydantic_v2 }}
          FASTAPI_PRE_0_112_4: ${{ matrix.fastapi_pre_0_112_4 }}
        run: |
          bash scripts/ci-test.sh

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.4.0
        with:
          files: ./coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
