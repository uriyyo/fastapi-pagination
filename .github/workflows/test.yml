name: Test

on:
  pull_request:
    types:
      - "opened"
      - "synchronize"
  push:
    branches:
      - "main"

jobs:
  test:
    runs-on: ubuntu-latest
    name: "py${{ matrix.python-version }}; pydantic-${{ matrix.pydantic_v2 == 'true' && 'v2' || 'v1' }}; fastapi${{ matrix.fastapi_pre_0_112_4 == 'true' && '<0.12.4' || '>=0.12.4' }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12", "3.13" ]
        pydantic_v2: [ "true", "false" ]
        fastapi_pre_0_112_4: [ "true", "false" ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Postgresql
        uses: harmon758/postgresql-action@v1
        with:
          postgresql db: 'postgres'
          postgresql user: 'postgres'
          postgresql password: 'postgres'

      - name: Set up MongoDB
        uses: supercharge/mongodb-github-action@1.11.0

      - name: Set up Scylla
        run: |
          export DOCKER_ID=$(docker run -d scylladb/scylla:latest --cluster-name test )
          export CQL_TEST_HOST=$(docker inspect --format='{{ .NetworkSettings.IPAddress }}' ${DOCKER_ID})
          while ! nc -z ${CQL_TEST_HOST} 9042; do   
            sleep 0.1 # wait for 1/10 of the second before check again
          done

          echo "CQL_TEST_HOST=${CQL_TEST_HOST}" >> $GITHUB_ENV

      - name: Install Poetry
        uses: snok/install-poetry@v1.4.1

      - name: Setup cache
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-py${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}-v1

      - name: Run tests
        shell: bash
        env:
          CQL_TEST_HOST: ${{ env.CQL_TEST_HOST }}
          PY_VERSION: ${{ matrix.python-version }}
          PYDANTIC_V2: ${{ matrix.pydantic_v2 }}
          FASTAPI_PRE_0_112_4: ${{ matrix.fastapi_pre_0_112_4 }}
        run: |
          bash scripts/ci-test.sh

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
